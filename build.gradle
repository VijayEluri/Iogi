apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'eclipse'
apply plugin: 'java'

group = "br.com.caelum"
version = "1.0.1"
ext.packaging = 'jar'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.thoughtworks.paranamer', name: 'paranamer', version: '2.5'
    compile group: 'com.google.guava', name: 'guava', version: '11.0.2'
    compile group: 'net.vidageek', name: 'mirror', version: '1.6.1'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'javassist', name: 'javassist', version: '3.12.1.GA'
    testCompile group: 'org.jmock', name: 'jmock', version: '2.5.1'
    testCompile group: 'org.jmock', name: 'jmock-legacy', version: '2.5.1'
    testCompile 'junit:junit:4.11'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}


uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Immutable Object Graph Instantiator'
        packaging 'jar'
        artifactId 'iogi'
        description 'Library for instantiating graphs of objects'
        url 'https://github.com/rafaeldff/Iogi'

        scm {
          connection 'scm:git:git://github.com/rafaeldff/Iogi'
          developerConnection 'scm:git:git@github.com:rafaeldff/Iogi.git'
          url 'https://github.com/rafaeldff/Iogi'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'rafaeldff'
            name 'Rafael Ferreira'
          }
          developer {
            id 'turini'
            name 'Rodrigo Turini'
          }
        }
      }
    }
  }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'test'
        }
    }
}

task unitTest(type: Test) {
    classpath = project.sourceSets.test.runtimeClasspath + files("${projectDir}/testBytecode")  
}